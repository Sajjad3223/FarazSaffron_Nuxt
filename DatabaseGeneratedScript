--
-- Script was generated by Devart dbForge Studio for SQL Server, Version 6.5.140.0
-- Product home page: http://www.devart.com/dbforge/sql/studio
-- Script date 3/5/2024 12:08:33 PM
-- Server version: 16.00.1000
--



USE GPSaffron
GO

IF DB_NAME() <> N'GPSaffron' SET NOEXEC ON
GO

--
-- Create table [user].[Users]
--
PRINT (N'Create table [user].[Users]')
GO
CREATE TABLE [user].Users (
  Id bigint IDENTITY,
  FirstName nvarchar(100) NOT NULL,
  LastName nvarchar(100) NOT NULL,
  NationalId nvarchar(max) NULL,
  PhoneNumber nvarchar(11) NOT NULL,
  ConfirmCode nvarchar(max) NULL,
  Email nvarchar(max) NULL,
  Password nvarchar(max) NOT NULL,
  Avatar nvarchar(max) NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Users PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [gp].[UserWallet]
--
PRINT (N'Create table [gp].[UserWallet]')
GO
CREATE TABLE gp.UserWallet (
  Id bigint IDENTITY,
  UserId bigint NOT NULL,
  Price int NOT NULL,
  Description nvarchar(max) NULL,
  IsFinally bit NOT NULL,
  FinallyDate datetime2 NULL,
  WalletType int NOT NULL,
  RefCode nvarchar(max) NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_UserWallet PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_UserWallet_UserId] on table [gp].[UserWallet]
--
PRINT (N'Create index [IX_UserWallet_UserId] on table [gp].[UserWallet]')
GO
CREATE INDEX IX_UserWallet_UserId
  ON gp.UserWallet (UserId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_UserWallet_Users_UserId] on table [gp].[UserWallet]
--
PRINT (N'Create foreign key [FK_UserWallet_Users_UserId] on table [gp].[UserWallet]')
GO
ALTER TABLE gp.UserWallet
  ADD CONSTRAINT FK_UserWallet_Users_UserId FOREIGN KEY (UserId) REFERENCES [user].Users (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[UserRole]
--
PRINT (N'Create table [gp].[UserRole]')
GO
CREATE TABLE gp.UserRole (
  Id bigint IDENTITY,
  UserId bigint NOT NULL,
  RoleId bigint NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_UserRole PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
GO

--
-- Create index [IX_UserRole_UserId] on table [gp].[UserRole]
--
PRINT (N'Create index [IX_UserRole_UserId] on table [gp].[UserRole]')
GO
CREATE INDEX IX_UserRole_UserId
  ON gp.UserRole (UserId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_UserRole_Users_UserId] on table [gp].[UserRole]
--
PRINT (N'Create foreign key [FK_UserRole_Users_UserId] on table [gp].[UserRole]')
GO
ALTER TABLE gp.UserRole
  ADD CONSTRAINT FK_UserRole_Users_UserId FOREIGN KEY (UserId) REFERENCES [user].Users (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[Address]
--
PRINT (N'Create table [gp].[Address]')
GO
CREATE TABLE gp.Address (
  Id bigint IDENTITY,
  ReceiverFirstName nvarchar(100) NOT NULL,
  ReceiverLastName nvarchar(100) NOT NULL,
  ReceiverPhoneNumber nvarchar(11) NOT NULL,
  State nvarchar(100) NOT NULL,
  City nvarchar(100) NOT NULL,
  Street nvarchar(500) NOT NULL,
  PostCode nvarchar(max) NULL,
  Plaque int NOT NULL,
  Unit int NOT NULL,
  UserId bigint NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  IsActiveAddress bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_Address PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_Address_UserId] on table [gp].[Address]
--
PRINT (N'Create index [IX_Address_UserId] on table [gp].[Address]')
GO
CREATE INDEX IX_Address_UserId
  ON gp.Address (UserId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_Address_Users_UserId] on table [gp].[Address]
--
PRINT (N'Create foreign key [FK_Address_Users_UserId] on table [gp].[Address]')
GO
ALTER TABLE gp.Address
  ADD CONSTRAINT FK_Address_Users_UserId FOREIGN KEY (UserId) REFERENCES [user].Users (Id)
GO

--
-- Create table [gp].[Roles]
--
PRINT (N'Create table [gp].[Roles]')
GO
CREATE TABLE gp.Roles (
  Id bigint IDENTITY,
  Title nvarchar(100) NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Roles PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
GO

--
-- Create table [gp].[Permissions]
--
PRINT (N'Create table [gp].[Permissions]')
GO
CREATE TABLE gp.Permissions (
  Id bigint IDENTITY,
  RoleId bigint NOT NULL,
  Permission int NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Permissions PRIMARY KEY CLUSTERED (RoleId, Id)
)
ON [PRIMARY]
GO

--
-- Create index [IX_Permissions_RoleId] on table [gp].[Permissions]
--
PRINT (N'Create index [IX_Permissions_RoleId] on table [gp].[Permissions]')
GO
CREATE INDEX IX_Permissions_RoleId
  ON gp.Permissions (RoleId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_Permissions_Roles_RoleId] on table [gp].[Permissions]
--
PRINT (N'Create foreign key [FK_Permissions_Roles_RoleId] on table [gp].[Permissions]')
GO
ALTER TABLE gp.Permissions
  ADD CONSTRAINT FK_Permissions_Roles_RoleId FOREIGN KEY (RoleId) REFERENCES gp.Roles (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[Products]
--
PRINT (N'Create table [gp].[Products]')
GO
CREATE TABLE gp.Products (
  Id bigint IDENTITY,
  Title nvarchar(200) NOT NULL,
  Slug nvarchar(200) NOT NULL,
  Price int NOT NULL,
  Discount int NULL,
  PackingType int NOT NULL,
  ImageSource nvarchar(200) NOT NULL,
  ImageAlt nvarchar(200) NULL,
  SerialNumber nvarchar(100) NULL,
  CategoryId bigint NOT NULL,
  SubCategoryId bigint NULL,
  ProductWidth int NOT NULL,
  ProductLength int NOT NULL,
  ProductHeight int NOT NULL,
  DigiKalaLink nvarchar(150) NULL,
  MetaTitle nvarchar(500) NULL,
  MetaDescription nvarchar(500) NULL,
  MetaKeyWords nvarchar(500) NULL,
  Canonical nvarchar(500) NULL,
  IndexPage bit NOT NULL,
  [Schema] nvarchar(max) NULL,
  Quantity int NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Products PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_Products_Slug] on table [gp].[Products]
--
PRINT (N'Create index [IX_Products_Slug] on table [gp].[Products]')
GO
CREATE UNIQUE INDEX IX_Products_Slug
  ON gp.Products (Slug)
  ON [PRIMARY]
GO

--
-- Create table [gp].[ProductSpecifications]
--
PRINT (N'Create table [gp].[ProductSpecifications]')
GO
CREATE TABLE gp.ProductSpecifications (
  Id bigint IDENTITY,
  ProductId bigint NOT NULL,
  Title nvarchar(100) NOT NULL,
  Value nvarchar(500) NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_ProductSpecifications PRIMARY KEY CLUSTERED (ProductId, Id)
)
ON [PRIMARY]
GO

--
-- Create foreign key [FK_ProductSpecifications_Products_ProductId] on table [gp].[ProductSpecifications]
--
PRINT (N'Create foreign key [FK_ProductSpecifications_Products_ProductId] on table [gp].[ProductSpecifications]')
GO
ALTER TABLE gp.ProductSpecifications
  ADD CONSTRAINT FK_ProductSpecifications_Products_ProductId FOREIGN KEY (ProductId) REFERENCES gp.Products (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[ProductImages]
--
PRINT (N'Create table [gp].[ProductImages]')
GO
CREATE TABLE gp.ProductImages (
  Id bigint IDENTITY,
  ProductId bigint NOT NULL,
  ImageSource nvarchar(200) NOT NULL,
  ImageAlt nvarchar(200) NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_ProductImages PRIMARY KEY CLUSTERED (ProductId, Id)
)
ON [PRIMARY]
GO

--
-- Create foreign key [FK_ProductImages_Products_ProductId] on table [gp].[ProductImages]
--
PRINT (N'Create foreign key [FK_ProductImages_Products_ProductId] on table [gp].[ProductImages]')
GO
ALTER TABLE gp.ProductImages
  ADD CONSTRAINT FK_ProductImages_Products_ProductId FOREIGN KEY (ProductId) REFERENCES gp.Products (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[MainPageData]
--
PRINT (N'Create table [gp].[MainPageData]')
GO
CREATE TABLE gp.MainPageData (
  Id bigint IDENTITY,
  AboveNavbarBannerId bigint NULL,
  BannerVideo nvarchar(200) NULL,
  ProductsToShow int NOT NULL,
  ShortAboutUs nvarchar(max) NULL,
  BannerImageSource nvarchar(max) NOT NULL,
  BannerImageAlt nvarchar(max) NULL,
  AboveNavbarBanner_IsMain bit NOT NULL,
  AboveNavbarBanner_Url nvarchar(max) NOT NULL,
  AboveNavbarBanner_Id bigint NOT NULL,
  AboveNavbarBanner_IsActive bit NOT NULL,
  AboveNavbarBanner_CreationDate datetime2 NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_MainPageData PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [gp].[SpecialComments]
--
PRINT (N'Create table [gp].[SpecialComments]')
GO
CREATE TABLE gp.SpecialComments (
  Id bigint IDENTITY,
  MainPageDataId bigint NOT NULL,
  PostId bigint NOT NULL,
  UserName nvarchar(max) NOT NULL,
  UserJob nvarchar(max) NOT NULL,
  UserScore nvarchar(max) NOT NULL,
  Content nvarchar(max) NOT NULL,
  LinkToDGKala nvarchar(max) NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_SpecialComments PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_SpecialComments_MainPageDataId] on table [gp].[SpecialComments]
--
PRINT (N'Create index [IX_SpecialComments_MainPageDataId] on table [gp].[SpecialComments]')
GO
CREATE INDEX IX_SpecialComments_MainPageDataId
  ON gp.SpecialComments (MainPageDataId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_SpecialComments_MainPageData_MainPageDataId] on table [gp].[SpecialComments]
--
PRINT (N'Create foreign key [FK_SpecialComments_MainPageData_MainPageDataId] on table [gp].[SpecialComments]')
GO
ALTER TABLE gp.SpecialComments
  ADD CONSTRAINT FK_SpecialComments_MainPageData_MainPageDataId FOREIGN KEY (MainPageDataId) REFERENCES gp.MainPageData (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[Modification]
--
PRINT (N'Create table [gp].[Modification]')
GO
CREATE TABLE gp.Modification (
  Id bigint IDENTITY,
  ItemId bigint NOT NULL,
  ItemTitle nvarchar(max) NOT NULL,
  ModificationType int NOT NULL,
  OldValue nvarchar(max) NOT NULL,
  NewValue nvarchar(max) NOT NULL,
  ModificationDate datetime2 NOT NULL,
  AddressId bigint NULL,
  SpecialCommentId bigint NULL,
  UserId bigint NULL,
  UserRoleId bigint NULL,
  UserWalletId bigint NULL,
  CONSTRAINT PK_Modification PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_Modification_AddressId] on table [gp].[Modification]
--
PRINT (N'Create index [IX_Modification_AddressId] on table [gp].[Modification]')
GO
CREATE INDEX IX_Modification_AddressId
  ON gp.Modification (AddressId)
  ON [PRIMARY]
GO

--
-- Create index [IX_Modification_SpecialCommentId] on table [gp].[Modification]
--
PRINT (N'Create index [IX_Modification_SpecialCommentId] on table [gp].[Modification]')
GO
CREATE INDEX IX_Modification_SpecialCommentId
  ON gp.Modification (SpecialCommentId)
  ON [PRIMARY]
GO

--
-- Create index [IX_Modification_UserId] on table [gp].[Modification]
--
PRINT (N'Create index [IX_Modification_UserId] on table [gp].[Modification]')
GO
CREATE INDEX IX_Modification_UserId
  ON gp.Modification (UserId)
  ON [PRIMARY]
GO

--
-- Create index [IX_Modification_UserRoleId] on table [gp].[Modification]
--
PRINT (N'Create index [IX_Modification_UserRoleId] on table [gp].[Modification]')
GO
CREATE INDEX IX_Modification_UserRoleId
  ON gp.Modification (UserRoleId)
  ON [PRIMARY]
GO

--
-- Create index [IX_Modification_UserWalletId] on table [gp].[Modification]
--
PRINT (N'Create index [IX_Modification_UserWalletId] on table [gp].[Modification]')
GO
CREATE INDEX IX_Modification_UserWalletId
  ON gp.Modification (UserWalletId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_Modification_Address_AddressId] on table [gp].[Modification]
--
PRINT (N'Create foreign key [FK_Modification_Address_AddressId] on table [gp].[Modification]')
GO
ALTER TABLE gp.Modification
  ADD CONSTRAINT FK_Modification_Address_AddressId FOREIGN KEY (AddressId) REFERENCES gp.Address (Id)
GO

--
-- Create foreign key [FK_Modification_SpecialComments_SpecialCommentId] on table [gp].[Modification]
--
PRINT (N'Create foreign key [FK_Modification_SpecialComments_SpecialCommentId] on table [gp].[Modification]')
GO
ALTER TABLE gp.Modification
  ADD CONSTRAINT FK_Modification_SpecialComments_SpecialCommentId FOREIGN KEY (SpecialCommentId) REFERENCES gp.SpecialComments (Id)
GO

--
-- Create foreign key [FK_Modification_UserRole_UserRoleId] on table [gp].[Modification]
--
PRINT (N'Create foreign key [FK_Modification_UserRole_UserRoleId] on table [gp].[Modification]')
GO
ALTER TABLE gp.Modification
  ADD CONSTRAINT FK_Modification_UserRole_UserRoleId FOREIGN KEY (UserRoleId) REFERENCES gp.UserRole (Id)
GO

--
-- Create foreign key [FK_Modification_Users_UserId] on table [gp].[Modification]
--
PRINT (N'Create foreign key [FK_Modification_Users_UserId] on table [gp].[Modification]')
GO
ALTER TABLE gp.Modification
  ADD CONSTRAINT FK_Modification_Users_UserId FOREIGN KEY (UserId) REFERENCES [user].Users (Id)
GO

--
-- Create foreign key [FK_Modification_UserWallet_UserWalletId] on table [gp].[Modification]
--
PRINT (N'Create foreign key [FK_Modification_UserWallet_UserWalletId] on table [gp].[Modification]')
GO
ALTER TABLE gp.Modification
  ADD CONSTRAINT FK_Modification_UserWallet_UserWalletId FOREIGN KEY (UserWalletId) REFERENCES gp.UserWallet (Id)
GO

--
-- Create table [gp].[MainPageData_BottomBanners]
--
PRINT (N'Create table [gp].[MainPageData_BottomBanners]')
GO
CREATE TABLE gp.MainPageData_BottomBanners (
  Id bigint IDENTITY,
  MainPageDataId bigint NOT NULL,
  BannerImageSource nvarchar(max) NOT NULL,
  BannerImageAlt nvarchar(max) NULL,
  IsMain bit NOT NULL,
  Url nvarchar(max) NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_MainPageData_BottomBanners PRIMARY KEY CLUSTERED (MainPageDataId, Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create foreign key [FK_MainPageData_BottomBanners_MainPageData_MainPageDataId] on table [gp].[MainPageData_BottomBanners]
--
PRINT (N'Create foreign key [FK_MainPageData_BottomBanners_MainPageData_MainPageDataId] on table [gp].[MainPageData_BottomBanners]')
GO
ALTER TABLE gp.MainPageData_BottomBanners
  ADD CONSTRAINT FK_MainPageData_BottomBanners_MainPageData_MainPageDataId FOREIGN KEY (MainPageDataId) REFERENCES gp.MainPageData (Id) ON DELETE CASCADE
GO

--
-- Create table [gp].[Honors]
--
PRINT (N'Create table [gp].[Honors]')
GO
CREATE TABLE gp.Honors (
  Id bigint IDENTITY,
  MainPageDataId bigint NOT NULL,
  BannerImageSource nvarchar(max) NOT NULL,
  BannerImageAlt nvarchar(max) NULL,
  Description nvarchar(max) NOT NULL,
  Link nvarchar(max) NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Honors PRIMARY KEY CLUSTERED (MainPageDataId, Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create foreign key [FK_Honors_MainPageData_MainPageDataId] on table [gp].[Honors]
--
PRINT (N'Create foreign key [FK_Honors_MainPageData_MainPageDataId] on table [gp].[Honors]')
GO
ALTER TABLE gp.Honors
  ADD CONSTRAINT FK_Honors_MainPageData_MainPageDataId FOREIGN KEY (MainPageDataId) REFERENCES gp.MainPageData (Id) ON DELETE CASCADE
GO

--
-- Create table [dbo].[Tickets]
--
PRINT (N'Create table [dbo].[Tickets]')
GO
CREATE TABLE dbo.Tickets (
  Id bigint IDENTITY,
  Title nvarchar(100) NOT NULL,
  Sender_UserId bigint NOT NULL,
  Sender_FullName nvarchar(100) NOT NULL,
  Text nvarchar(max) NOT NULL,
  TicketStatus int NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Tickets PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [ticket].[TicketMessages]
--
PRINT (N'Create table [ticket].[TicketMessages]')
GO
CREATE TABLE ticket.TicketMessages (
  Id bigint IDENTITY,
  TicketId bigint NOT NULL,
  Sender_UserId bigint NOT NULL,
  Sender_FullName nvarchar(100) NOT NULL,
  Message nvarchar(max) NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_TicketMessages PRIMARY KEY CLUSTERED (TicketId, Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create foreign key [FK_TicketMessages_Tickets_TicketId] on table [ticket].[TicketMessages]
--
PRINT (N'Create foreign key [FK_TicketMessages_Tickets_TicketId] on table [ticket].[TicketMessages]')
GO
ALTER TABLE ticket.TicketMessages
  ADD CONSTRAINT FK_TicketMessages_Tickets_TicketId FOREIGN KEY (TicketId) REFERENCES dbo.Tickets (Id) ON DELETE CASCADE
GO

--
-- Create table [dbo].[Posts]
--
PRINT (N'Create table [dbo].[Posts]')
GO
CREATE TABLE dbo.Posts (
  Id bigint IDENTITY,
  Title nvarchar(200) NOT NULL,
  Slug nvarchar(100) NOT NULL,
  ShortDescription nvarchar(100) NOT NULL,
  Content nvarchar(max) NOT NULL,
  Writer_UserId bigint NOT NULL,
  Writer_FullName nvarchar(100) NOT NULL,
  CategoryId bigint NOT NULL,
  SubCategoryId bigint NULL,
  ImageSource nvarchar(100) NOT NULL,
  ImageAlt nvarchar(100) NULL,
  MetaTitle nvarchar(500) NULL,
  MetaDescription nvarchar(500) NULL,
  MetaKeyWords nvarchar(500) NULL,
  Canonical nvarchar(500) NULL,
  IndexPage bit NOT NULL,
  [Schema] nvarchar(max) NULL,
  Tags nvarchar(max) NULL,
  PostStatus int NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Posts PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[Modification]
--
PRINT (N'Create table [dbo].[Modification]')
GO
CREATE TABLE dbo.Modification (
  Id bigint IDENTITY,
  ItemId bigint NOT NULL,
  ItemTitle nvarchar(max) NOT NULL,
  ModificationType int NOT NULL,
  OldValue nvarchar(max) NOT NULL,
  NewValue nvarchar(max) NOT NULL,
  ModificationDate datetime2 NOT NULL,
  PostId bigint NULL,
  CONSTRAINT PK_Modification PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_Modification_PostId] on table [dbo].[Modification]
--
PRINT (N'Create index [IX_Modification_PostId] on table [dbo].[Modification]')
GO
CREATE INDEX IX_Modification_PostId
  ON dbo.Modification (PostId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_Modification_Posts_PostId] on table [dbo].[Modification]
--
PRINT (N'Create foreign key [FK_Modification_Posts_PostId] on table [dbo].[Modification]')
GO
ALTER TABLE dbo.Modification
  ADD CONSTRAINT FK_Modification_Posts_PostId FOREIGN KEY (PostId) REFERENCES dbo.Posts (Id)
GO

--
-- Create table [dbo].[Orders]
--
PRINT (N'Create table [dbo].[Orders]')
GO
CREATE TABLE dbo.Orders (
  Id bigint IDENTITY,
  UserId bigint NOT NULL,
  FullName nvarchar(max) NOT NULL,
  TotalPrice int NOT NULL,
  DiscountCode nvarchar(10) NOT NULL,
  DiscountAmount int NOT NULL,
  FinallyPrice int NOT NULL,
  Score int NOT NULL,
  FinallyDate datetime2 NULL,
  IsFinally bit NOT NULL,
  ReferCode nvarchar(max) NULL,
  OrderStatus int NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Orders PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[OrderItems]
--
PRINT (N'Create table [dbo].[OrderItems]')
GO
CREATE TABLE dbo.OrderItems (
  Id bigint IDENTITY,
  OrderId bigint NOT NULL,
  ItemProductId bigint NOT NULL,
  ItemProductName nvarchar(max) NOT NULL,
  ItemProductSlug nvarchar(max) NOT NULL,
  ItemInfo_EItemType int NOT NULL,
  ItemProductImageSource nvarchar(max) NOT NULL,
  ItemProductImageAlt nvarchar(max) NULL,
  Price int NOT NULL,
  Count int NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_OrderItems PRIMARY KEY CLUSTERED (OrderId, Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create foreign key [FK_OrderItems_Orders_OrderId] on table [dbo].[OrderItems]
--
PRINT (N'Create foreign key [FK_OrderItems_Orders_OrderId] on table [dbo].[OrderItems]')
GO
ALTER TABLE dbo.OrderItems
  ADD CONSTRAINT FK_OrderItems_Orders_OrderId FOREIGN KEY (OrderId) REFERENCES dbo.Orders (Id) ON DELETE CASCADE
GO

--
-- Create table [dbo].[Notifications]
--
PRINT (N'Create table [dbo].[Notifications]')
GO
CREATE TABLE dbo.Notifications (
  Id bigint IDENTITY,
  UserId bigint NULL,
  Title nvarchar(100) NOT NULL,
  Content nvarchar(max) NOT NULL,
  SubjectType int NOT NULL,
  IsSeen bit NOT NULL,
  AvailableTime time NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Notifications PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[DiscountCodes]
--
PRINT (N'Create table [dbo].[DiscountCodes]')
GO
CREATE TABLE dbo.DiscountCodes (
  Id bigint IDENTITY,
  Code nvarchar(10) NOT NULL,
  AmountInPercent int NOT NULL,
  AvailableTime time NOT NULL,
  AvailableQuantity int NOT NULL,
  UsedCount int NOT NULL,
  JustForUser bigint NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_DiscountCodes PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
GO

--
-- Create index [IX_DiscountCodes_Code] on table [dbo].[DiscountCodes]
--
PRINT (N'Create index [IX_DiscountCodes_Code] on table [dbo].[DiscountCodes]')
GO
CREATE INDEX IX_DiscountCodes_Code
  ON dbo.DiscountCodes (Code)
  ON [PRIMARY]
GO

--
-- Create table [dbo].[Comments]
--
PRINT (N'Create table [dbo].[Comments]')
GO
CREATE TABLE dbo.Comments (
  Id bigint IDENTITY,
  ParentId bigint NULL,
  PostId bigint NOT NULL,
  PostType int NOT NULL,
  Sender_UserId bigint NOT NULL,
  Sender_FullName nvarchar(100) NOT NULL,
  Score int NOT NULL,
  Content nvarchar(max) NOT NULL,
  IsConsumer bit NOT NULL,
  CommentStatus int NOT NULL,
  CommentId bigint NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Comments PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_Comments_CommentId] on table [dbo].[Comments]
--
PRINT (N'Create index [IX_Comments_CommentId] on table [dbo].[Comments]')
GO
CREATE INDEX IX_Comments_CommentId
  ON dbo.Comments (CommentId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_Comments_Comments_CommentId] on table [dbo].[Comments]
--
PRINT (N'Create foreign key [FK_Comments_Comments_CommentId] on table [dbo].[Comments]')
GO
ALTER TABLE dbo.Comments
  ADD CONSTRAINT FK_Comments_Comments_CommentId FOREIGN KEY (CommentId) REFERENCES dbo.Comments (Id)
GO

--
-- Create table [dbo].[Categories]
--
PRINT (N'Create table [dbo].[Categories]')
GO
CREATE TABLE dbo.Categories (
  Id bigint IDENTITY,
  Title nvarchar(max) NOT NULL,
  ParentId bigint NULL,
  Slug nvarchar(max) NOT NULL,
  CategoryId bigint NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_Categories PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create index [IX_Categories_CategoryId] on table [dbo].[Categories]
--
PRINT (N'Create index [IX_Categories_CategoryId] on table [dbo].[Categories]')
GO
CREATE INDEX IX_Categories_CategoryId
  ON dbo.Categories (CategoryId)
  ON [PRIMARY]
GO

--
-- Create foreign key [FK_Categories_Categories_CategoryId] on table [dbo].[Categories]
--
PRINT (N'Create foreign key [FK_Categories_Categories_CategoryId] on table [dbo].[Categories]')
GO
ALTER TABLE dbo.Categories
  ADD CONSTRAINT FK_Categories_Categories_CategoryId FOREIGN KEY (CategoryId) REFERENCES dbo.Categories (Id)
GO

--
-- Create table [dbo].[__EFMigrationsHistory]
--
PRINT (N'Create table [dbo].[__EFMigrationsHistory]')
GO
CREATE TABLE dbo.__EFMigrationsHistory (
  MigrationId nvarchar(150) NOT NULL,
  ProductVersion nvarchar(32) NOT NULL,
  CONSTRAINT PK___EFMigrationsHistory PRIMARY KEY CLUSTERED (MigrationId)
)
ON [PRIMARY]
GO

--
-- Create table [contacts].[NewsLetterReceivers]
--
PRINT (N'Create table [contacts].[NewsLetterReceivers]')
GO
CREATE TABLE contacts.NewsLetterReceivers (
  Id bigint IDENTITY,
  FullName nvarchar(max) NULL,
  Email nvarchar(max) NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_NewsLetterReceivers PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [contacts].[ContactMessages]
--
PRINT (N'Create table [contacts].[ContactMessages]')
GO
CREATE TABLE contacts.ContactMessages (
  Id bigint IDENTITY,
  FullName nvarchar(100) NOT NULL,
  PhoneNumber nvarchar(11) NOT NULL,
  Email nvarchar(100) NOT NULL,
  Text nvarchar(max) NOT NULL,
  IsActive bit NOT NULL,
  CreationDate datetime2 NOT NULL,
  CONSTRAINT PK_ContactMessages PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO
SET NOEXEC OFF
GO
